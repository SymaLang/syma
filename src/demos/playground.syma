{Module
  Demo/Template
  {Program IsEmpty(Empty) IsEmpty(NonEmpty) Alt(Empty, alt) Alt(something, alt)}
  {Rules
    {R "Head"         Head({List x_ rest...}) x_}
    {R "Tail"         Tail({List _ rest...})  {List rest...}}

    {R "List/Len/Empty" Len({List}) 0}
    {R "List/Len/Step"  Len({List i_ rest...}) {+ Len({List rest...}) 1}}
    {R "List/Append" Append({List a...}, {List b...}) {List a... b...}}
    {R "Map/Empty" Map(f_, {List}) {List}}
    {R
      "Map/Step"
      Map(f_, {List x_ xs...})
      Append({List {f_ x_}}, Map(f_, {List xs...}))
    }
    
    {R "Filter/Empty" Filter(p_, {List})                {List}}
    {R "Filter/Keep"  Filter(p_, {List x_ xs...})
                      Append({List x_}, Filter(p_, {List xs...}))
                      :guard Eq(x_, b)}
    {R "Filter/Skip"  Filter(p_, {List _ xs...})
                      Filter(p_, {List xs...})}
    
  }
}