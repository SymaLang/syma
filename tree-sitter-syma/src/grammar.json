{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "syma",
  "rules": {
    "source_file": {
      "type": "REPEAT1",
      "content": {
        "type": "SYMBOL",
        "name": "expression"
      }
    },
    "expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "number"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "PREC",
          "value": 3,
          "content": {
            "type": "SYMBOL",
            "name": "var_rest_pattern"
          }
        },
        {
          "type": "PREC",
          "value": 2,
          "content": {
            "type": "SYMBOL",
            "name": "var_pattern"
          }
        },
        {
          "type": "PREC",
          "value": 1,
          "content": {
            "type": "SYMBOL",
            "name": "symbol"
          }
        },
        {
          "type": "SYMBOL",
          "name": "brace_call"
        },
        {
          "type": "SYMBOL",
          "name": "function_call"
        }
      ]
    },
    "comment": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "PATTERN",
            "value": ";[^\\n]*"
          },
          {
            "type": "PATTERN",
            "value": "\\/\\/[^\\n]*"
          },
          {
            "type": "PATTERN",
            "value": "\\/\\*([^*]|\\*[^\\/])*\\*\\/"
          }
        ]
      }
    },
    "number": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "-?\\d+(\\.\\d+)?"
      }
    },
    "string": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\""
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "PATTERN",
                "value": "\\\\[nrt\"\\\\]"
              },
              {
                "type": "PATTERN",
                "value": "[^\"\\\\]+"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "\""
        }
      ]
    },
    "var_rest_pattern": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "STRING",
            "value": "..."
          },
          {
            "type": "STRING",
            "value": "___"
          },
          {
            "type": "PATTERN",
            "value": "[a-zA-Z][a-zA-Z0-9_]*\\.\\.\\."
          },
          {
            "type": "PATTERN",
            "value": "[a-zA-Z][a-zA-Z0-9]*___"
          }
        ]
      }
    },
    "var_pattern": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "STRING",
            "value": "_"
          },
          {
            "type": "PATTERN",
            "value": "[a-zA-Z][a-zA-Z0-9]*_"
          }
        ]
      }
    },
    "symbol": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[^{}\\(\\),\\s\";\\n]+"
      }
    },
    "brace_call": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "FIELD",
          "name": "head",
          "content": {
            "type": "SYMBOL",
            "name": "expression"
          }
        },
        {
          "type": "FIELD",
          "name": "arguments",
          "content": {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "expression"
            }
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "function_call": {
      "type": "PREC",
      "value": 2,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "FIELD",
            "name": "function",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "symbol"
                },
                {
                  "type": "ALIAS",
                  "content": {
                    "type": "PATTERN",
                    "value": "[a-zA-Z_][a-zA-Z0-9_]*"
                  },
                  "named": true,
                  "value": "symbol"
                }
              ]
            }
          },
          {
            "type": "IMMEDIATE_TOKEN",
            "content": {
              "type": "STRING",
              "value": "("
            }
          },
          {
            "type": "FIELD",
            "name": "arguments",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "_argument_list"
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          },
          {
            "type": "STRING",
            "value": ")"
          }
        ]
      }
    },
    "_argument_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "expression"
              }
            ]
          }
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    },
    {
      "type": "SYMBOL",
      "name": "comment"
    }
  ],
  "conflicts": [
    [
      "symbol",
      "var_pattern"
    ],
    [
      "symbol",
      "var_rest_pattern"
    ]
  ],
  "precedences": [
    [
      {
        "type": "SYMBOL",
        "name": "var_rest_pattern"
      },
      {
        "type": "SYMBOL",
        "name": "var_pattern"
      },
      {
        "type": "SYMBOL",
        "name": "symbol"
      }
    ]
  ],
  "externals": [],
  "inline": [],
  "supertypes": [],
  "reserved": {}
}