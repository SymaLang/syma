/**
 * Core/Zipper — tag-carrying zipper
 * Shape: Zipper(tag, {Before …}, {Curr …}, {After …})
 */
{Module
  Core/Zipper
  {Export
    Zipper
    ZipperFromList
    ZipperToList
    ZipperMoveNext
    ZipperMovePrev
    ZipperInsertAfter
    ZipperInsertBefore
    ZipperDelete
    ZipperPeek
    ZipperAtStart
    ZipperAtEnd
  }
  {Rules
    {R
      "FromList/NonEmpty"
      ZipperFromList({tag_ head_ elems...})
      Zipper(tag_, {Before}, {Curr head_}, {After elems...})
    }
    {R
      "FromList/Empty"
      ZipperFromList({tag_})
      Zipper(tag_, {Before}, {Curr Empty}, {After})
    }
    {R
      "ToList/NonEmpty"
      ZipperToList(Zipper(tag_, {Before before...}, {Curr curr_}, {After after...}))
      {tag_ before... curr_ after...}
      Neq(curr_, Empty)
    }
    {R
      "ToList/EmptyCurr"
      ZipperToList(Zipper(tag_, {Before before...}, {Curr Empty}, {After after...}))
      {tag_ before... after...}
    }
    {R
      "MoveNext/HasNext"
      ZipperMoveNext(Zipper(tag_, {Before before...}, {Curr curr_}, {After next_ rest...}))
      Zipper(tag_, {Before before... curr_}, {Curr next_}, {After rest...})
    }
    {R
      "MoveNext/End"
      ZipperMoveNext(Zipper(tag_, {Before before...}, {Curr curr_}, {After}))
      Zipper(tag_, {Before before... curr_}, {Curr Empty}, {After})
    }
    {R
      "MovePrev/HasPrev"
      ZipperMovePrev(Zipper(tag_, {Before before... prev_}, {Curr curr_}, {After after...}))
      Zipper(tag_, {Before before...}, {Curr prev_}, {After curr_ after...})
    }
    {R
      "MovePrev/Start"
      ZipperMovePrev(Zipper(tag_, {Before}, {Curr curr_}, {After after...}))
      Zipper(tag_, {Before}, {Curr Empty}, {After after...})
    }
    {R
      "InsertAfter/NonEmpty"
      ZipperInsertAfter(Zipper(tag_, {Before before...}, {Curr curr_}, {After after...}), new_)
      Zipper(tag_, {Before before...}, {Curr curr_}, {After new_ after...})
      Neq(curr_, Empty)
    }
    {R
      "InsertAfter/EmptyCurr"
      ZipperInsertAfter(Zipper(tag_, {Before}, {Curr Empty}, {After}), new_)
      Zipper(tag_, {Before}, {Curr new_}, {After})
    }
    {R
      "InsertBefore/NonEmpty"
      ZipperInsertBefore(Zipper(tag_, {Before before...}, {Curr curr_}, {After after...}), new_)
      Zipper(tag_, {Before before... new_}, {Curr curr_}, {After after...})
      Neq(curr_, Empty)
    }
    {R
      "InsertBefore/EmptyCurr"
      ZipperInsertBefore(Zipper(tag_, {Before before...}, {Curr Empty}, {After after...}), new_)
      Zipper(tag_, {Before before...}, {Curr new_}, {After after...})
    }
    {R
      "Delete/HasRight"
      ZipperDelete(Zipper(tag_, {Before before...}, {Curr _}, {After next_ rest...}))
      Zipper(tag_, {Before before...}, {Curr next_}, {After rest...})
    }
    {R
      "Delete/FallToEmpty"
      ZipperDelete(Zipper(tag_, {Before before...}, {Curr _}, {After}))
      Zipper(tag_, {Before before...}, {Curr Empty}, {After})
    }
    {R
      "Peek"
      ZipperPeek(Zipper(tag_, {Before _...}, {Curr curr_}, {After _...}))
      curr_
    }
    {R
      "AtStart/True"
      ZipperAtStart(Zipper(tag_, {Before}, {Curr _}, {After _...}))
      True
    }
    {R
      "AtStart/False"
      ZipperAtStart(Zipper(tag_, {Before _...}, {Curr _}, {After _...}))
      False
    }
    {R
      "AtEnd/True"
      ZipperAtEnd(Zipper(tag_, {Before _...}, {Curr _}, {After}))
      True
    }
    {R
      "AtEnd/False"
      ZipperAtEnd(Zipper(tag_, {Before _...}, {Curr _}, {After _...}))
      False
    }
  }
}